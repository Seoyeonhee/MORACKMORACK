<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="communityMapper">

	<resultMap type ="community" id="communitySelectMap">
	<result property="postNo" column="POST_NO" jdbcType="INTEGER" />
		<result property="user.userId" column="USER_ID" jdbcType="VARCHAR" />
		<result property="communitesName" column="COMMUNIT_NAME" jdbcType="CHAR" />
		<result property="meet.meetId" column="MEET_ID" jdbcType="INTEGER" />
		<result property="offMeet.offNo" column="OFF_NO" jdbcType="INTEGER" />
		<result property="business_businessId" column="BUSINESS_Id" jdbcType="VARCHAR"/>
		<result property="title" column="TITLE" jdbcType="VARCHAR"/>
		<result property="content" column="CONTENT" jdbcType="VARCHAR"/>
		<result property="regDate" column="REG_DATE" jdbcType="DATE"/>
	     <result property="modDate" column="MOD_DATE" jdbcType="DATE"/>
	    <result property="viewCount" column="VIEW_COUNT" jdbcType="NUMERIC"/>
	    <result property="likeCount" column="LIKE_COUNT" jdbcType="NUMERIC"/>
	    <result property="rvstar" column="RVSTAR" jdbcType="INTEGER"/>
	    
    </resultMap>

  <resultMap id="commentsSelectMap" type="comments">
	    <result property="commentNo" 		  column= "COMMENT_NO" 			   jdbcType="INTEGER"/>
		<result property="postNo" 			  column= "POST_NO" 			   jdbcType="INTEGER"/>
		<result property="userId"	          column= "USER_ID" 		       jdbcType="VARCHAR" />
		<result property="businessId"	      column= "BUSINESS_ID" 	       jdbcType="VARCHAR" />
		<result property="parentCommentNo" 	  column= "PARENT_COMMENT_NO" 	   jdbcType="INTEGER" />
		<result property="commentContent"	  column= "COMMENT_CONTENT"		   jdbcType="VARCHAR" />
		<result property="regDate" 			  column= "REG_DATE" 		       jdbcType="DATE" />
		<result property="modDate" 			  column= "MOD_DATE" 			   jdbcType="DATE" />
		<result property="commentDepth"       column= "COMMENT_DEPTH"          jdbcType="INTEGER"/>
		<result property="imgName" 			  column= "IMG_NAME" 			   jdbcType="VARCHAR" />
	</resultMap>
	
	<insert id="addOffReview"		parameterType="community" >
		INSERT
		INTO communites( post_no , user_id , communites_name , meet_id , off_no , title , content , reg_date , mod_date, rvstar) 
		VALUES	 ( seq_communites_post_no.NEXTVAL , #{user.userId:VARCHAR} , '2' , #{meet.meetId:INTEGER} , 
							#{offMeet.offNo:INTEGER} , #{title:VARCHAR} ,  #{content:VARCHAR}, SYSDATE, NULL, #{rvStar:INTEGER} )
	</insert>
	
	<update id="updateOffReview" parameterType="community" >
		UPDATE communites
		<set>
		title = #{title}, 
		content = #{content} , 
	    modDate = sysdate
		</set>
		WHERE communites_name = '2' and post_no = #{postNo} 
	</update>
	
	<select id="getOffReview" parameterType="INT" resultMap="communitySelectMap">
	SELECT * 
	FROM communites 
	WHERE communites_name = '2' AND post_no = #{postNo}
	</select>
	
	<delete id="deleteOffReview" parameterType="community" >
	DELETE FROM communites 
	WHERE post_no = #{postNo}
	</delete>
	
	
	<select id ="getRecentOffReview" parameterType="String" resultMap="communitySelectMap">
	SELECT * 
	FROM (SELECT *
  	FROM communites
   	order by reg_date DESC) 
   	where Meet_id = #{meet.meetId}
   	AND communites_name  = '2'
   	AND ROWNUM = 1
	</select>

	
	
	<select id="getOffReviewList" parameterType="map" resultMap="communitySelectMap">
  		SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM ( SELECT  post_no, communites_name, meet_id, user_id  off_no, title, content, rvstar, reg_date
										FROM communites
										WHERE 
										communites_name  = '2'
										AND off_no = #{offNo}
										ORDER BY reg_date DESC  ) inner_table
  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}
	</select>
	
	
	<select id="getOffReviewCount_meetId" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM (
			SELECT
			post_no, user_id, off_no, title, content, rvstar, reg_date
			FROM communites
			WHERE
			meet_Id = #{value}
			ORDER BY reg_date DESC
		) countTable
	</select>	 
	
	
	<select id="getOffReviewCount_offNo" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM (
			SELECT
			post_no, user_id, off_no, title, content, rvstar, reg_date
			FROM communites
			WHERE
			offNo = #{value}
			ORDER BY reg_date DESC
		) countTable
	</select>	 
	
	
	
	
	<insert id="addBusinessReview"		parameterType="community" >
		INSERT
		INTO communites( post_no , user_id , communites_name , meet_id , business_id, title , content , reg_date , mod_date, rvstar) 
		VALUES	 ( seq_communites_post_no.NEXTVAL , #{user.userId:VARCHAR} , '3' , #{meet.meetId:INTEGER} , 
				  #{business.businessId:VARCHAR} #{title:VARCHAR} ,  #{content:VARCHAR}, SYSDATE, NULL, #{rvStar:INTEGER} )
	</insert>
	
	<update id="updateBusinessReview" parameterType="community" >
		UPDATE communites
		<set>
		title = #{title}, 
		content = #{content}, 
	    modDate = sysdate
		</set>
		WHERE communites_name = '3' and post_no = #{postNo} 
	</update>
	
<!-- 	<select id="getBusinessReview" parameterType="INT" resultMap="communitesSelectMap"> -->
<!-- 	SELECT *  -->
<!-- 	FROM communites  -->
<!-- 	WHERE board_type = '3' AND post_no = #{postNo} -->
<!-- 	</select> -->
	
	<delete id="deleteBusinessReview" parameterType="community" >
	DELETE FROM communites 
	WHERE post_no = #{postNo}
	</delete>

	<select id="getBusinessReviewList" parameterType="map" resultMap="communitySelectMap">
  		SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM ( SELECT  c.post_no, c.user_id,  b.Business_id, c.title, c.content, c.rvstar, c.reg_date
										FROM communites c,  business b
										WHERE c.business_id = b.business_id 
										AND c.user_id = u.user_id 
										AND b.business_id = #{businessId}
										ORDER BY reg_date DESC  ) inner_table
  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}
	</select>
	
	
		<select id="getBusinessReviewCount" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM (
			SELECT
			c.post_no, p.user_id, b.Business_id, c.title, c.content, c.rvstar, c.reg_date
			FROM communites c,  business b
			WHERE c.business_id = b.business_id
			AND c.user_id = u.user_id 
		    AND b.business_id = #{businessId}
		) countTable
	</select>	 
	
	
	
</mapper>